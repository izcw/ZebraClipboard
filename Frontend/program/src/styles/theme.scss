// 定义主题映射
$themes: (
    light: (
        // 默认背景
        background: #fafafa,
        // 默认字体颜色
        text: #000000,
        //组件背景
        component-background: rgba(255, 255, 255, 0.8),
        // 组件阴影
        component-box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05),
        component-icon-color: #141414,
        component-icon-color-default:#BFBFBF,
        component-icon-color-active:#0B7FE9,
        component-icon-color-reverse : #fff,
        // 数字颜色3、6、9
        color-numeral-333:#333,
        color-numeral-666:#666,
        color-numeral-999:#999,
    ),
    dark: (
        background: #0c0e12,
        text: #ffffff,
        component-background: rgba(29, 30, 38, 0.8),
        component-box-shadow: 0 -1px 2px rgb(255 255 255 / 45%),
        component-icon-color: #ffffff,
        component-icon-color-default:#BFBFBF,
        component-icon-color-active:#0B7FE9,
        component-icon-color-reverse : #fff,
        color-numeral-333:#eee,
        color-numeral-666:#666,
        color-numeral-999:#999,
    )
);

// 混合宏：根据主题映射生成 CSS 变量
@mixin apply-theme($theme) {
    --background-color: #{map-get($theme, background)};
    --text-color: #{map-get($theme, text)};
    --component-background: #{map-get($theme, component-background)};
    --component-box-shadow: #{map-get($theme, component-box-shadow)};
    --component-icon-color: #{map-get($theme, component-icon-color)};
    --component-icon-color-default:#{map-get($theme, component-icon-color-default)};
    --component-icon-color-active:#{map-get($theme, component-icon-color-active)};
    --component-icon-color-reverse:#{map-get($theme, component-icon-color-reverse)};
    --color-numeral-333: #{map-get($theme, color-numeral-333)};
    --color-numeral-666: #{map-get($theme, color-numeral-666)};
    --color-numeral-999: #{map-get($theme, color-numeral-999)};
    background-color: var(--background-color);
    color: var(--text-color);
    width: 100%;
    height: 100%;
}

// 应用默认主题（白天）
body {
    @include apply-theme(map-get($themes, light));
    transition:
        background-color 0.5s ease,
        color 0.5s ease,
        background 0.5s ease,
        box-shadow 0.5s ease; /* 添加过渡效果 */
}

// 应用黑夜主题
.dark-theme {
    @include apply-theme(map-get($themes, dark));
    transition:
        background-color 0.5s ease,
        color 0.5s ease,
        background 0.5s ease,
        box-shadow 0.5s ease; /* 添加过渡效果 */
}

// 添加过渡动画效果
@keyframes themeTransition {
    from {
        opacity: 0.5;
    }
    to {
        opacity: 1;
    }
}

// 对 body 添加动画效果
body,
.dark-theme {
    animation: themeTransition 0.5s ease;
}
